datasource db {
    provider = "mysql"
    url      = env("DATABASE_URL")
}

enum Status {
    active
    pending
    disabled
    declined
}

model Lesson {
    id              String          @id
    published       String
    name            String
    info            String          @db.Text
    thumb           String          @db.Text
    pdf             String?
    likes           User[]
    views           LessonView[]
    watchedTimes    LessonWatched[]
    downloads       User[]          @relation(name: "downloads-relation")

    media_id        String          @unique
    media           Media           @relation(fields: [media_id], references: [id], onDelete: Cascade)
    status          Status          @default(pending)
    declined_reason String?
}

model LessonWatched {
    id          Int         @id @default(autoincrement())
    watchedTime String

    lesson_id   String
    lesson      Lesson      @relation(fields: [lesson_id], references: [id], onDelete: Cascade)

    user_id     String
    user        User        @relation(fields: [user_id], references: [id], onDelete: Cascade)
}

model LessonView {
    id          Int         @id @default(autoincrement())
    datetime    String

    lesson_id   String
    lesson      Lesson      @relation(fields: [lesson_id], references: [id], onDelete: Cascade)

    user_id     String
    user        User        @relation(fields: [user_id], references: [id], onDelete: Cascade)
}

model Media {
    id          String          @id
    lesson_id   String?
    lesson      Lesson?
}

model User {
    id                  String          @id
    lessons_views       LessonView[]
    lessons_likes       Lesson[]
    lessons_downloads   Lesson[]        @relation(name: "downloads-relation")
    lessons_watchtime   LessonWatched[]
}
